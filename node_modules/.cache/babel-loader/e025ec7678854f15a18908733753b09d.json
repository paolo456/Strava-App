{"ast":null,"code":"var _jsxFileName = \"/Users/danielbondi/Documents/GitHub/Strava-App/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios';\nimport { Line } from \"react-chartjs-2\";\nimport Chart from './components/Chart';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconsole.log(process.env);\nconst callRefreshURL = 'https://www.strava.com/oauth/token?client_id=' + process.env.REACT_APP_client_id + '&client_secret=' + process.env.REACT_APP_client_secret + '&refresh_token=' + process.env.REACT_APP_refresh_token + '&grant_type=refresh_token';\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reduceData = this.reduceData.bind(this);\n    this.state = {\n      access_token: {},\n      refresh_token: {},\n      activities: [],\n      imageURL: [],\n      selected: new Map(),\n      nextColor: 'red',\n      heartrate1: [],\n      heartrate2: [],\n      distance1: [],\n      distance2: [],\n      dataID1: '',\n      dataID2: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.post(callRefreshURL).then(results => {\n      let access_token = results.data.access_token;\n      let refresh_token = results.data.refresh_token;\n      this.setState({\n        access_token: access_token,\n        refresh_token: refresh_token\n      });\n      this.getActivites(null);\n    });\n  }\n\n  getActivites(filterNumber) {\n    if (this.state.access_token !== '') {\n      let num = filterNumber !== null ? filterNumber : '4';\n      const URL = 'https://www.strava.com/api/v3/athlete/activities?per_page=' + num + '&access_token=' + this.state.access_token;\n\n      if (this.state.activities.length > 0) {\n        this.setState({\n          activities: [],\n          imageURL: []\n        });\n      }\n\n      axios.get(URL, {\n        method: 'GET'\n      }).then(results => {\n        this.setState({\n          activities: results.data\n        });\n        this.getMaps();\n      });\n    }\n  }\n\n  getMaps() {\n    this.state.activities.forEach(element => {\n      console.log(element);\n      const map = 'https://maps.googleapis.com/maps/api/staticmap\\?size=600x300&maptype=roadmap\\&path=enc:' + element.map.summary_polyline + '\\&key=AIzaSyBgqwajgRIEaLQ92J7ahUndHvd7NJYIDPY';\n      axios.get(map).then(results => {\n        console.log(results.request.responseURL);\n        let image = {\n          id: element.id,\n          url: results.request.responseURL\n        };\n        this.setState({\n          imageURL: this.state.imageURL.concat(image)\n        });\n      });\n    });\n  }\n\n  reduceData(results, toggle) {\n    let reducedHeartRate = [];\n    let metersToMiles = []; //reduce the array by 10%\n\n    for (let [index, item] of results.data.heartrate.data.entries()) {\n      if (index % 20 === 0) {\n        reducedHeartRate.push(item);\n        metersToMiles.push((results.data.time.data[index] / 60).toFixed(0));\n      }\n    }\n\n    return toggle == 'hr' ? reducedHeartRate : metersToMiles;\n  }\n\n  handleClick(id, element) {\n    const hrURL = 'https://www.strava.com/api/v3/activities/' + id + '/streams?keys=heartrate,time&key_by_type=true&access_token=' + this.state.access_token; //change border color\n\n    let red = document.querySelector('.red');\n\n    if (document.querySelectorAll('.selected').length > 1) {\n      if (element.target.classList.contains('selected')) {\n        this.removeChartDataFromState(element);\n        element.target.className = 'tile';\n        this.setActivityDescription(id);\n      }\n\n      return;\n    }\n\n    if (!element.target.classList.contains('selected')) {\n      if (red) {\n        element.target.classList.add('selected', 'blue');\n        axios.get(hrURL).then(results => {\n          let id = results.config.url.split('/')[6];\n          this.setState({\n            dataID1: id,\n            heartrate1: this.reduceData(results, 'hr'),\n            distance1: this.reduceData(results, 'dist')\n          });\n        });\n      } else {\n        element.target.classList.add('selected', 'red');\n        axios.get(hrURL).then(results => {\n          let id = results.config.url.split('/')[6];\n          this.setState({\n            dataID2: id,\n            heartrate2: this.reduceData(results, 'hr'),\n            distance2: this.reduceData(results, 'dist')\n          });\n        });\n      }\n    } else {\n      this.removeChartDataFromState(element);\n      element.target.className = 'tile';\n    }\n\n    this.setActivityDescription(id);\n  }\n\n  setActivityDescription(id) {\n    let label = this.state.activities.find(exercise => {\n      return exercise.id == id;\n    }).name;\n    let findTime = this.state.activities.find(exercise => {\n      return exercise.id == id;\n    }).start_date_local;\n    let time = this.tConvert(findTime.split('T')[1].substr(0, findTime.split('T')[1].length - 1));\n    label = label + ' - ' + time;\n    this.state.selected.get(id) ? this.state.selected.delete(id) : this.setState({\n      selected: this.state.selected.set(id, label)\n    });\n  }\n\n  tConvert(time) {\n    // Check correct time format and split into components\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n\n      time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n\n    return time.join(''); // return adjusted time or original string\n  }\n\n  removeChartDataFromState(element) {\n    element.target.classList.contains('red') ? this.setState({\n      heartrate2: [],\n      distance2: []\n    }) : this.setState({\n      heartrate1: [],\n      distance1: []\n    });\n  }\n\n  render() {\n    const maps = this.state.imageURL.map(activity => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tile-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"tile\",\n          src: activity.url,\n          onClick: element => this.handleClick(activity.id, element),\n          onMouseLeave: element => {\n            element.target.classList.add('tile-mouse-out');\n            let tiles = $('.tile');\n            tiles.one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n              $(this).removeClass('tile-mouse-out');\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this)\n      }, activity.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this);\n    });\n    return this.state.access_token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maps\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: maps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"myUL\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => this.getActivites('4'),\n              children: \"4 - Tiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => this.getActivites('6'),\n              children: \"6 - Tiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => this.getActivites('8'),\n              children: \"8 - Tiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => this.getActivites('10'),\n              children: \"10 - Tiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => this.getActivites('200'),\n              children: \"All Activities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        width: 500,\n        height: 500,\n        data1: this.state.heartrate1,\n        data2: this.state.heartrate2,\n        dataID1: this.state.dataID1,\n        dataID2: this.state.dataID2,\n        selected: this.state.selected,\n        distance1: this.state.distance1,\n        distance2: this.state.distance2,\n        largestDistance: this.state.distance1.length > this.state.distance2.length ? this.state.distance1 : this.state.distance2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 215,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/danielbondi/Documents/GitHub/Strava-App/src/index.js"],"names":["React","ReactDOM","axios","Line","Chart","reportWebVitals","$","require","config","console","log","process","env","callRefreshURL","REACT_APP_client_id","REACT_APP_client_secret","REACT_APP_refresh_token","Container","Component","constructor","props","reduceData","bind","state","access_token","refresh_token","activities","imageURL","selected","Map","nextColor","heartrate1","heartrate2","distance1","distance2","dataID1","dataID2","componentDidMount","post","then","results","data","setState","getActivites","filterNumber","num","URL","length","get","method","getMaps","forEach","element","map","summary_polyline","request","responseURL","image","id","url","concat","toggle","reducedHeartRate","metersToMiles","index","item","heartrate","entries","push","time","toFixed","handleClick","hrURL","red","document","querySelector","querySelectorAll","target","classList","contains","removeChartDataFromState","className","setActivityDescription","add","split","label","find","exercise","name","findTime","start_date_local","tConvert","substr","delete","set","toString","match","slice","join","render","maps","activity","tiles","one","removeClass","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios';\nimport { Line } from \"react-chartjs-2\";\nimport Chart from './components/Chart'\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery'\nrequire('dotenv').config()\nconsole.log(process.env)\n\nconst callRefreshURL = 'https://www.strava.com/oauth/token?client_id='+process.env.REACT_APP_client_id+'&client_secret='+process.env.REACT_APP_client_secret+'&refresh_token='+process.env.REACT_APP_refresh_token+'&grant_type=refresh_token'\n\nclass Container extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.reduceData = this.reduceData.bind(this)\n\t\tthis.state = {\n\t\t\taccess_token: {},\n\t\t\trefresh_token: {},\n\t\t\tactivities: [],\n\t\t\timageURL: [],\n\t\t\tselected: new Map(),\n\t\t\tnextColor: 'red',\n\t\t\theartrate1: [],\n\t\t\theartrate2: [],\n\t\t\tdistance1: [],\n\t\t\tdistance2: [],\n\t\t\tdataID1: '',\n\t\t\tdataID2: ''\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\taxios.post(callRefreshURL).then(results => {\n\t\t\tlet access_token = results.data.access_token\n\t\t\tlet refresh_token = results.data.refresh_token\n\t\t\tthis.setState({\n\t\t\t\taccess_token: access_token,\n\t\t\t\trefresh_token: refresh_token\n\t\t\t})\n\t\t\tthis.getActivites(null)\n\t\t})\n\t}\n\tgetActivites(filterNumber) {\n\t\tif (this.state.access_token !== '') {\n\t\t\tlet num = filterNumber !== null ? filterNumber : '4'\n\t\t\tconst URL = 'https://www.strava.com/api/v3/athlete/activities?per_page='+num+'&access_token='+this.state.access_token\n\t\t\tif (this.state.activities.length > 0) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tactivities: [],\n\t\t\t\t\timageURL: []\n\t\t\t\t})\n\t\t\t}\n\t\t\taxios.get(URL, {method: 'GET'}).then(results => {\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tactivities: results.data\n\t\t\t\t})\n\t\t\t\tthis.getMaps()\n\t\t\t})\n\t\t}\n\t}\n\tgetMaps() {\n\t\tthis.state.activities.forEach(element => {\n\t\t\tconsole.log(element)\n\t\t\tconst map = 'https://maps.googleapis.com/maps/api/staticmap\\?size=600x300&maptype=roadmap\\&path=enc:'+element.map.summary_polyline+'\\&key=AIzaSyBgqwajgRIEaLQ92J7ahUndHvd7NJYIDPY'\n\t\t\taxios.get(map).then(results => {\n\t\t\t\tconsole.log(results.request.responseURL)\n\t\t\t\tlet image = {id: element.id, url: results.request.responseURL,}\n\t\t\t\tthis.setState({\n\t\t\t\t\timageURL: this.state.imageURL.concat(image),\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t\t\n\t}\n\treduceData(results, toggle) {\n\t\tlet reducedHeartRate = []\n\t\tlet metersToMiles = []\n\t\t//reduce the array by 10%\n\t\tfor(let [index, item] of results.data.heartrate.data.entries()) {\n\t\t\tif(index % 20 === 0) {\n\t\t\t\treducedHeartRate.push(item)\n\t\t\t\tmetersToMiles.push((results.data.time.data[index]/60).toFixed(0))\n\t\t\t}\n\t\t}\n\t\treturn toggle == 'hr' ? reducedHeartRate : metersToMiles\n\t}\n\thandleClick(id, element) {\n\t\tconst hrURL = 'https://www.strava.com/api/v3/activities/'+id+'/streams?keys=heartrate,time&key_by_type=true&access_token='+this.state.access_token\n\t\t\n\t\t//change border color\n\t\tlet red = document.querySelector('.red')\n\t\tif (document.querySelectorAll('.selected').length > 1) {\n\t\t\tif (element.target.classList.contains('selected')) {\n\t\t\t\tthis.removeChartDataFromState(element)\n\t\t\t\telement.target.className = 'tile'\n\t\t\t\tthis.setActivityDescription(id)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif (!element.target.classList.contains('selected')) {\n\t\t\tif (red) {\n\t\t\t\telement.target.classList.add('selected', 'blue')\n\t\t\t\taxios.get(hrURL).then((results) => {\n\t\t\t\t\tlet id = results.config.url.split('/')[6]\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdataID1: id,\n\t\t\t\t\t\theartrate1: this.reduceData(results, 'hr'),\n\t\t\t\t\t\tdistance1: this.reduceData(results, 'dist')\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.target.classList.add('selected', 'red')\n\t\t\t\taxios.get(hrURL).then((results) => {\n\t\t\t\t\tlet id = results.config.url.split('/')[6]\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdataID2: id,\n\t\t\t\t\t\theartrate2: this.reduceData(results, 'hr'),\n\t\t\t\t\t\tdistance2: this.reduceData(results, 'dist')\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t\telse {\n\t\t\tthis.removeChartDataFromState(element)\n\t\t\telement.target.className = 'tile'\n\t\t}\n\t\tthis.setActivityDescription(id)\n\t\t\n\t}\n\tsetActivityDescription(id) {\n\t\tlet label = this.state.activities.find((exercise) => {return exercise.id == id}).name\n\t\tlet findTime = this.state.activities.find((exercise) => {return exercise.id == id}).start_date_local\n\t\tlet time = this.tConvert(findTime.split('T')[1].substr(0, findTime.split('T')[1].length-1))\n\t\tlabel = label + ' - ' + time\n\t\tthis.state.selected.get(id) ? \n\t\tthis.state.selected.delete(id) : \n\t\tthis.setState({\n\t\t\tselected: this.state.selected.set(id, label)\n\t\t})\n\t}\n\ttConvert(time) {\n\t\t// Check correct time format and split into components\n\t\ttime = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\t  \n\t\tif (time.length > 1) { // If time format correct\n\t\t  time = time.slice (1);  // Remove full string match value\n\t\t  time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\t\t  time[0] = +time[0] % 12 || 12; // Adjust hours\n\t\t}\n\t\treturn time.join (''); // return adjusted time or original string\n\t}\n\tremoveChartDataFromState(element) {\n\t\telement.target.classList.contains('red') ?\n\t\t\tthis.setState({\n\t\t\t\theartrate2: [],\n\t\t\t\tdistance2: []\n\t\t\t}) :\n\t\t\tthis.setState({\n\t\t\t\theartrate1: [],\n\t\t\t\tdistance1: []\n\t\t\t})\n\t}\n\trender() {\n\t\tconst maps = this.state.imageURL.map((activity) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"tile-container\" key={activity.id}>\n\t\t\t\t\t<img \n\t\t\t\t\t\tclassName='tile'\n\t\t\t\t\t\tsrc={activity.url}\n\t\t\t\t\t\tonClick={(element) => this.handleClick(activity.id, element)}\n\t\t\t\t\t\tonMouseLeave={(element) => {\n\t\t\t\t\t\t\telement.target.classList.add('tile-mouse-out')\n\t\t\t\t\t\t\tlet tiles = $('.tile')\n\t\t\t\t\t\t\ttiles.one('webkitAnimationEnd oanimationend msAnimationEnd animationend',\n\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t$(this).removeClass('tile-mouse-out')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t</img>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\treturn (this.state.access_token ? <div className=\"container\">\n\t\t\t<div className=\"maps\">\n\t\t\t\t<div>{maps}</div>\n\t\t\t</div>\n\t\t\t<div className='filter'>\n\t\t\t\t<ul id=\"myUL\">\n\t\t\t\t\t<li><a onClick={() => this.getActivites('4')}>4 - Tiles</a></li>\n\t\t\t\t\t<li><a onClick={() => this.getActivites('6')}>6 - Tiles</a></li>\n\t\t\t\t\t<li><a onClick={() => this.getActivites('8')}>8 - Tiles</a></li>\n\t\t\t\t\t<li><a onClick={() => this.getActivites('10')}>10 - Tiles</a></li>\n\t\t\t\t\t<li><a onClick={() => this.getActivites('200')}>All Activities</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Chart width={500} height={500} \n\t\t\t\tdata1={this.state.heartrate1}\n\t\t\t\tdata2={this.state.heartrate2}\n\t\t\t\tdataID1={this.state.dataID1}\n\t\t\t\tdataID2={this.state.dataID2}\n\t\t\t\tselected={this.state.selected}\n\t\t\t\tdistance1={this.state.distance1}\n\t\t\t\tdistance2={this.state.distance2}\n\t\t\t\tlargestDistance = {this.state.distance1.length > this.state.distance2.length ? this.state.distance1 : this.state.distance2}\n\t\t\t\t/>\n\t\t\t\t\n\t\t</div> : <h1>loading</h1>)\n\t}\n}\nReactDOM.render(<Container />, document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}