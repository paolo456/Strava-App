{"ast":null,"code":"var _jsxFileName = \"/Users/danielbondi/Documents/GitHub/Strava-App/src/components/Chart.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.css';\nimport { Scatter } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Chart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let data1 = [];\n    let data2 = [];\n    this.props.data1.forEach((element, index) => {\n      data1.push({\n        x: this.props.distance1[index],\n        y: element\n      });\n    });\n    this.props.data2.forEach((element, index) => {\n      data2.push({\n        x: this.props.distance2[index],\n        y: element\n      });\n    });\n    let label1 = this.props.selected.get(Number(this.props.dataID2));\n    let label2 = this.props.selected.get(Number(this.props.dataID1));\n    let data = {\n      labels: this.props.largestDistance,\n      datasets: []\n    };\n\n    if (data2.length > 0) {\n      data.datasets[data.datasets.length] = {\n        label: this.props.selected.get(Number(this.props.dataID2)),\n        showLine: true,\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#ff0000',\n        pointBackgroundColor: '#ff0000',\n        borderWidth: 2,\n        data: data2\n      };\n    }\n\n    if (data1.length > 0) {\n      data.datasets[data.datasets.length] = {\n        label: this.props.selected.get(Number(this.props.dataID1)),\n        showLine: true,\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#0000ff',\n        pointBackgroundColor: '#0000ff',\n        borderWidth: 2,\n        data: data1\n      };\n    }\n\n    if (this.props.data1.length > 0 || this.props.data2.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Scatter, {\n          data: data,\n          options: {\n            type: 'linear',\n            responsive: true,\n            tooltips: {\n              callbacks: {\n                label: function (tooltipItem, data) {\n                  var dataset = data.datasets[tooltipItem.datasetIndex];\n                  var index = tooltipItem.index;\n                  tooltipItem.label = dataset.data[index].x;\n                  return dataset.data[index].x + ': ' + dataset.data[index].y;\n                }\n              }\n            },\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Heartrate'\n                }\n              }],\n              xAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Minutes of Activity'\n                }\n              }]\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loading-chart\",\n      children: \"Make a Selection Above\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/danielbondi/Documents/GitHub/Strava-App/src/components/Chart.js"],"names":["React","ReactDOM","Scatter","Chart","Component","constructor","props","render","data1","data2","forEach","element","index","push","x","distance1","y","distance2","label1","selected","get","Number","dataID2","label2","dataID1","data","labels","largestDistance","datasets","length","label","showLine","fill","lineTension","backgroundColor","borderColor","pointBackgroundColor","borderWidth","type","responsive","tooltips","callbacks","tooltipItem","dataset","datasetIndex","scales","yAxes","scaleLabel","display","labelString","xAxes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.css';\nimport { Scatter } from \"react-chartjs-2\";\n\n\nexport default class Chart extends React.Component{\n  constructor(props){\n\tsuper(props)\n\t\n\t}\n  render() {\n\tlet data1 = []\n\tlet data2 = []\n\tthis.props.data1.forEach((element, index) => {\n\t\tdata1.push({x: this.props.distance1[index], y: element})\n\t})\n\tthis.props.data2.forEach((element, index) => {\n\t\tdata2.push({x: this.props.distance2[index], y: element})\n\t})\n\tlet label1 = this.props.selected.get(Number(this.props.dataID2))\n\tlet label2 = this.props.selected.get(Number(this.props.dataID1))\n\tlet data = {\n\t\tlabels: this.props.largestDistance,\n\t\tdatasets: []\n\t  }\n\t  if (data2.length > 0) {\n\t\tdata.datasets[data.datasets.length] = {\n\t\t\tlabel: this.props.selected.get(Number(this.props.dataID2)),\n\t\t\tshowLine: true,\n\t\t\tfill: false,\n\t\t\tlineTension: 0,\n\t\t\tbackgroundColor: 'rgba(75,192,192,1)',\n\t\t\tborderColor: '#ff0000',\n\t\t\tpointBackgroundColor: '#ff0000',\n\t\t\tborderWidth: 2,\n\t\t\tdata: data2\n\t\t  }\n\t  }\n\t  if (data1.length > 0) {\n\t\tdata.datasets[data.datasets.length] = {\n\t\t\tlabel: this.props.selected.get(Number(this.props.dataID1)),\n\t\t\tshowLine: true,\n\t\t\tfill: false,\n\t\t\tlineTension: 0,\n\t\t\tbackgroundColor: 'rgba(75,192,192,1)',\n\t\t\tborderColor: '#0000ff',\n\t\t\tpointBackgroundColor: '#0000ff',\n\t\t\tborderWidth: 2,\n\t\t\tdata: data1\n\t\t   }\n\t  }\n\t  if (this.props.data1.length > 0 || this.props.data2.length > 0) {\n\t\treturn (\n\t\t\t<div className=\"chart\">\n\t\t\t<Scatter \n\t\t\t\tdata={data}\n\t\t\t\toptions={{\n\t\t\t\t\ttype: 'linear',\n\t\t\t\t\tresponsive: true, \n\t\t\t\t\ttooltips: {\n\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\t\t\t\tvar dataset = data.datasets[tooltipItem.datasetIndex];\n\t\t\t\t\t\t\t\tvar index = tooltipItem.index;\n\t\t\t\t\t\t\t\ttooltipItem.label = dataset.data[index].x\n\t\t\t\t\t\t\t\treturn dataset.data[index].x + ': ' + dataset.data[index].y;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\t  scaleLabel: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\tlabelString: 'Heartrate'\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t}],\n\t\t\t\t\t\txAxes: [{\n\t\t\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\t\t  display: true,\n\t\t\t\t\t\t\t  labelString: 'Minutes of Activity'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }]\n\t\t\t\t\t  }\n\t\t\t\t}}/>\n\t\t  </div>\n\t\t  )\n\t  }\n\t  else\n\t  \treturn <h1 className='loading-chart'>Make a Selection Above</h1>\n\t  \t\n\t  \n  }\n}"]},"metadata":{},"sourceType":"module"}